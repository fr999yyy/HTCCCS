# Generated by Django 4.2.17 on 2025-01-01 14:09

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminSetting',
            fields=[
                ('setting_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('course_info', models.CharField(blank=True, max_length=255, null=True)),
                ('std_limit', models.IntegerField(blank=True, null=True)),
                ('course_type', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('form_id', models.AutoField(primary_key=True, serialize=False)),
                ('form_type', models.CharField(choices=[('J1', 'Junior Stage 1'), ('H1', 'High Stage 1'), ('J2', 'Junior Stage 2'), ('H2', 'High Stage 2')], max_length=2)),
                ('j_or_h', models.CharField(choices=[('J', 'Junior'), ('H', 'High')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('section_time', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('std_id', models.IntegerField(primary_key=True, serialize=False)),
                ('std_name', models.CharField(max_length=50)),
                ('team', models.IntegerField()),
                ('satb', models.CharField(choices=[('S', 'Soprano'), ('A', 'Alto'), ('T', 'Tenor'), ('B', 'Bass')], max_length=1)),
                ('j_or_h', models.CharField(choices=[('Junior', 'Junior'), ('High', 'High')], max_length=6)),
                ('std_tag', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('volunteer_id', models.AutoField(primary_key=True, serialize=False)),
                ('camp_name', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_pic', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Selection',
            fields=[
                ('selection_id', models.AutoField(primary_key=True, serialize=False)),
                ('priority_order', models.IntegerField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.course')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.form')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.student')),
            ],
        ),
        migrations.AddField(
            model_name='form',
            name='sectionID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.section'),
        ),
        migrations.AddField(
            model_name='course',
            name='section_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.section'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('std_id', models.IntegerField(unique=True)),
                ('team', models.IntegerField()),
                ('satb', models.CharField(choices=[('S', 'Soprano'), ('A', 'Alto'), ('T', 'Tenor'), ('B', 'Bass')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CourseVolunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.course')),
                ('volunteer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.volunteer')),
            ],
            options={
                'unique_together': {('course_id', 'volunteer_id')},
            },
        ),
    ]
