# Generated by Django 4.2.17 on 2025-01-10 11:21

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminSetting',
            fields=[
                ('setting_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('configuration', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('section_time', models.CharField(max_length=30)),
                ('section_display', models.CharField(default='', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('std_id', models.IntegerField(primary_key=True, serialize=False)),
                ('std_name', models.CharField(max_length=10, null=True)),
                ('team', models.IntegerField(choices=[(1, '第一小隊'), (2, '第二小隊'), (3, '第三小隊'), (4, '第四小隊'), (5, '第五小隊'), (6, '第六小隊'), (7, '第七小隊'), (8, '第八小隊')], null=True)),
                ('satb', models.CharField(choices=[('S', 'S'), ('A', 'A'), ('T', 'T'), ('B', 'B')], max_length=1, null=True)),
                ('j_or_h', models.CharField(choices=[('J', 'Junior'), ('H', 'High')], max_length=1, null=True)),
                ('std_tag', models.CharField(blank=True, max_length=15, null=True)),
                ('form1_completed', models.BooleanField(default=False)),
                ('form2_completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('volunteer_id', models.AutoField(primary_key=True, serialize=False)),
                ('camp_name', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_pic', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialCourse',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('course_info', models.TextField(blank=True, max_length=255, null=True)),
                ('std_limit', models.IntegerField(default=99)),
                ('course_type', models.CharField(max_length=2)),
                ('section_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_app.section')),
            ],
        ),
        migrations.CreateModel(
            name='SelectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('form_type', models.CharField(default='J1', max_length=2)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.section')),
                ('std', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Selection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('course_id', models.CharField(max_length=50)),
                ('form_type', models.CharField(default='J1', max_length=2)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.section')),
                ('std', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('course_info', models.TextField(blank=True, max_length=255, null=True)),
                ('std_limit', models.IntegerField(default=25)),
                ('course_type', models.CharField(max_length=2)),
                ('section_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_app.section')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('std_id', models.CharField(max_length=100, unique=True)),
                ('team', models.CharField(max_length=100)),
                ('satb', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
